== Preparation ==
create a Kubernetes cluster on GCE with 6 nodes 1 vCPU n1-standard-1 3,75GB RAM with local SSDs

== Demo ==
open
https://console.cloud.google.com/kubernetes/list?project=...

kubectl create -f static.yaml
kubectl create -f p0.yaml
kubectl get po -w
-> warten

-> p0.yaml anschauen


kubectl create -f trampoline.yaml

kubectl port-forward trampoline 26257 8080 8081


http://localhost:8080/


cockroach sql --host localhost --insecure

CREATE USER demo WITH PASSWORD 'demo';

CREATE DATABASE demo;
GRANT ALL ON DATABASE demo TO demo;


kubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host cockroachdb-public -d demo


CREATE TABLE customers (
   id INTEGER NOT NULL PRIMARY KEY,
   "name" STRING(65536) NULL
);


CREATE TABLE orders (
     customer INTEGER NOT NULL,
     id INTEGER NOT NULL,
     total DECIMAL(19,2) NULL,
     PRIMARY KEY (customer, id),
     CONSTRAINT fk_customer FOREIGN KEY (customer) REFERENCES customers (id)
);






kubectl create -f cockroachdemo-service.yaml




DELETE FROM orders WHERE 1=1;
DELETE FROM customers WHERE 1=1;




docker build -t cockroachdemo .
docker tag cockroachdemo:latest hub.predic8.de/cockroachdemo:latest
docker push hub.predic8.de/cockroachdemo:latest

curl -d 'customerCount=10000&customerOffset=0&ordersPerCustomer=1&nameLength=10000&transactionSize=100' http://localhost:8081/data/demo
-> 100MB / 66s


http://localhost:8082/query?customerId=300
-> 300ms bei 100MB


select c.name, o.total from customers c inner join orders o on c.id = o.customer where c.id = 100 and o.id = 100


CREATE TABLE orders (
     customer INTEGER NOT NULL,
     id INTEGER NOT NULL,
     total DECIMAL(19,2) NULL,
     PRIMARY KEY (customer, id),
     CONSTRAINT fk_customer FOREIGN KEY (customer) REFERENCES customers (id)
) INTERLEAVE IN PARENT customers (customer);

-> repeat
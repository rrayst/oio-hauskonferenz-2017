apiVersion: v1
kind: List
items:
- kind: Pod
  apiVersion: v1
  metadata:
    name: cockroachdb-$(N)
    labels:
      app: cockroachdb
  spec:
    initContainers:
    - name: bootstrap
      image: cockroachdb/cockroach-k8s-init:0.2
      imagePullPolicy: IfNotPresent
      args:
      - "-on-start=/on-start.sh"
      - "-service=cockroachdb"
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      volumeMounts:
      - name: datadir
        mountPath: /cockroach/cockroach-data
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - cockroachdb
            topologyKey: kubernetes.io/hostname
    containers:
    - name: cockroachdb
      image: cockroachdb/cockroach:v1.1.3
      imagePullPolicy: IfNotPresent
      ports:
      - containerPort: 26257
        name: grpc
      - containerPort: 8080
        name: http
      volumeMounts:
      - name: datadir
        mountPath: /cockroach/cockroach-data
      command:
        - "/bin/bash"
        - "-ecx"
        - |
          CRARGS=("start" "--logtostderr" "--insecure" "--host" "$(hostname -f)" "--http-host" "0.0.0.0" "--cache" "25%" "--max-sql-memory" "25%")
          if [ ! "$(hostname)" == "cockroachdb-0" ] || \
             [ -e "/cockroach/cockroach-data/cluster_exists_marker" ]
          then
            CRARGS+=("--join" "cockroachdb-public")
          fi
          exec /cockroach/cockroach ${CRARGS[*]}
    terminationGracePeriodSeconds: 60
    hostname: cockroachdb-$(N)
    subdomain: cockroachdb
    nodeName: $(NODE)
    volumes:
    - name: datadir
      hostPath:
        path: /mnt/disks/ssd0/cockroach
